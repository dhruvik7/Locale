{"version":3,"sources":["GeoCentroid/store/store.ts","GeoCentroid/actions/locationEntryActions.ts","Sliders/store/store.ts","GeoCentroid/mutators/locationEntryMutators.ts","Sliders/selectors/sliderSelectors.ts","GeoCentroid/LocationList.tsx","GeoCentroid/LocationEntry.tsx","Sliders/actions/sliderActions.ts","Sliders/mutators/sliderMutators.ts","Sliders/SliderEntry.tsx","Sliders/SchoolSlider.tsx","Sliders/HousingSlider.tsx","Sliders/EducationSlider.tsx","Sliders/WalkingSlider.tsx","Sliders/UrbanSlider.tsx","Sliders/TransitSlider.tsx","Sliders/FamilySlider.tsx","GeoCentroid/ResultList.tsx","firebase.ts","api.ts","GeoCentroid/orchestrators/locationOrchestrators.ts","GeoCentroid/LoadingResults.tsx","GeoCentroid/AddressMap.tsx","GeoCentroid/ResultContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getStore","createStore","startedSession","entries","currentEntry","text","sliderNum","coordinates","submitted","centroid","latitude","longitude","zipCodes","valid_zipcodes","datum","rankedData","finalScores","results","resultCoordinates","invalidResponse","addNewAddress","action","maintainInput","event","removeAddress","address","submitAddresses","submit","geocode","formRankedMatrix","setCentroid","center","setZipCode","zipcode","addData","data","computeRanking","createRankingArray","removeFirst","setLoaded","addFinalCoordinate","lat","lng","setInvalidResponse","sliderNums","getRanking","vals","sorted","slice","sort","a","b","map","val","indexOf","mutator","actionMessage","target","value","splice","push","length","alert","shift","Object","values","id","temp","i","raw_data","index","col","row","console","log","zip","arr1","arr2","sum","len","dotProduct","placements","x","score","rank","LocationList","observer","addresses","addressList","ListItem","className","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","List","React","Component","LocationEntry","store","FormControl","TextField","name","placeholder","onChange","aria-describedby","fullWidth","Fab","color","maintainSlider","slider","SliderEntry","marks","label","this","props","lowEnd","highEnd","title","desc","Slider","SchoolSlider","HousingSlider","EducationSlider","WalkingSlider","UrbanSlider","TransitSlider","FamilySlider","ResultList","content","res","alignItems","toString","concat","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","API_KEY","ZIPCODE_KEY","geocodeHelper","centroidHelper","closestZipCode","zipCodeList","addZipCodeData","getResultCoordinates","urlified","trim","replace","axios","get","response","geometry","location","coords","coord","getCenter","latlng","undefined","components","address_components","types","short_name","centerZip","radius","DataList","Code","collection","then","snapshot","forEach","doc","includes","orchestrator","driver","LoadingResults","LinearProgress","variant","convert","require","getColor","hue","hsl","hex","AddressMap","markers","opts","draggable","position","zips","icon","url","zoom","style","height","width","useVisualization","ResultsContainer","scrollTo","loc","setTimeout","scroller","smooth","duration","size","type","Boolean","window","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6beb6092.chunk.js","sourcesContent":["import { createStore } from \"satcheljs\";\r\n\r\ninterface Coordinate {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\ninterface Result {\r\n  zip: string;\r\n  score: number;\r\n  rank: number;\r\n}\r\n\r\ninterface LocationEntryStore {\r\n  startedSession: boolean;\r\n  entries: number;\r\n  currentEntry: string;\r\n  text: string[];\r\n  sliderNum: number;\r\n  coordinates: Coordinate[];\r\n  submitted: boolean;\r\n  centroid: { latitude: number; longitude: number };\r\n  zipCodes: string[];\r\n  valid_zipcodes: string[];\r\n  datum: number[][];\r\n  rankedData: number[][];\r\n  finalScores: number[];\r\n  results: Result[];\r\n  resultCoordinates: Coordinate[];\r\n  invalidResponse: boolean;\r\n}\r\n\r\nconst getStore = createStore<LocationEntryStore>(\"LocationEntryStore\", {\r\n  startedSession: false,\r\n  entries: 0,\r\n  currentEntry: \"\",\r\n  text: [],\r\n  sliderNum: 50,\r\n  coordinates: [],\r\n  submitted: false,\r\n  centroid: { latitude: 0, longitude: 0 },\r\n  zipCodes: [],\r\n  valid_zipcodes: [],\r\n  datum: [],\r\n  rankedData: [],\r\n  finalScores: [],\r\n  results: [],\r\n  resultCoordinates: [],\r\n  invalidResponse: false\r\n});\r\n\r\nexport default getStore;\r\n","import { action } from \"satcheljs\";\r\n\r\nexport let addNewAddress = action(\"addNewAddress\");\r\nexport let maintainInput = action(\"maintainInput\", event => ({ event }));\r\nexport let removeAddress = action(\"removeAddress\", (address: string) => ({\r\n  address\r\n}));\r\nexport let submitAddresses = action(\r\n  \"submitAddresses\",\r\n  (latitude: number, longitude: number) => ({ latitude, longitude })\r\n);\r\nexport let submit = action(\"submit\");\r\nexport let geocode = action(\"geocode\");\r\nexport let formRankedMatrix = action(\"formRankedMatrix\");\r\nexport let setCentroid = action(\"setCentroid\", center => ({ center }));\r\nexport let setZipCode = action(\"setZipCode\", zipcode => ({ zipcode }));\r\nexport let addData = action(\"addData\", data => ({ data }));\r\nexport let computeRanking = action(\"computeRanking\");\r\nexport let createRankingArray = action(\"createRankingArray\");\r\nexport let removeFirst = action(\"removeFirst\");\r\nexport let setLoaded = action(\"setLoaded\");\r\nexport let addFinalCoordinate = action(\r\n  \"addFinalCoordinate\",\r\n  (lat: number, lng: number) => ({ lat, lng })\r\n);\r\nexport let setInvalidResponse = action(\"setInvalidResponse\");\r\n","import { createStore } from \"satcheljs\";\r\n\r\ninterface SliderStore {\r\n  sliderNums: number[];\r\n}\r\n\r\nconst getStore = createStore<SliderStore>(\"SliderStore\", {\r\n  sliderNums: [0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50]\r\n});\r\n\r\nexport default getStore;\r\n","import { mutator } from \"satcheljs\";\r\nimport {\r\n  addNewAddress,\r\n  maintainInput,\r\n  removeAddress,\r\n  submit,\r\n  submitAddresses,\r\n  setCentroid,\r\n  setZipCode,\r\n  addData,\r\n  formRankedMatrix,\r\n  computeRanking,\r\n  createRankingArray,\r\n  removeFirst,\r\n  setLoaded,\r\n  addFinalCoordinate,\r\n  setInvalidResponse\r\n} from \"../actions/locationEntryActions\";\r\nimport getStore from \"../store/store\";\r\nimport { getSliderState } from \"../../Sliders/selectors/sliderSelectors\";\r\n\r\nmutator(addNewAddress, () => {\r\n  if (\r\n    getStore().currentEntry !== \"\" &&\r\n    getStore().text.indexOf(getStore().currentEntry) === -1\r\n  ) {\r\n    getStore().text[getStore().entries] = getStore().currentEntry;\r\n    getStore().entries++;\r\n    getStore().currentEntry = \"\";\r\n  }\r\n});\r\n\r\nmutator(maintainInput, actionMessage => {\r\n  getStore().currentEntry = actionMessage.event.target.value;\r\n});\r\n\r\nmutator(removeAddress, actionMessage => {\r\n  getStore().text.splice(getStore().text.indexOf(actionMessage.address), 1);\r\n  getStore().entries--;\r\n});\r\n\r\nmutator(submitAddresses, actionMessage => {\r\n  getStore().coordinates.push({\r\n    lat: actionMessage.latitude,\r\n    lng: actionMessage.longitude\r\n  });\r\n});\r\n\r\nmutator(submit, actionMessage => {\r\n  if (getStore().text.length > 0) {\r\n    getStore().submitted = true;\r\n    getStore().coordinates = [];\r\n    getStore().zipCodes = [];\r\n    getStore().valid_zipcodes = [];\r\n    getStore().datum = [];\r\n    getStore().rankedData = [];\r\n    getStore().finalScores = [];\r\n    getStore().results = [];\r\n    getStore().resultCoordinates = [];\r\n    getStore().startedSession = true;\r\n    getStore().invalidResponse = false;\r\n  } else {\r\n    alert(\"You must add at least one location to proceed with your search\");\r\n  }\r\n});\r\n\r\nmutator(setLoaded, actionMessage => {\r\n  getStore().submitted = false;\r\n});\r\n\r\nmutator(setCentroid, actionMessage => {\r\n  getStore().centroid = actionMessage.center;\r\n});\r\n\r\nmutator(setZipCode, actionMessage => {\r\n  getStore().zipCodes.push(actionMessage.zipcode);\r\n});\r\n\r\nmutator(removeFirst, actionMessage => {\r\n  getStore().zipCodes.shift();\r\n});\r\n\r\nmutator(addData, actionMessage => {\r\n  getStore().datum.push(Object.values(actionMessage.data.data()));\r\n  getStore().valid_zipcodes.push(actionMessage.data.id);\r\n});\r\n\r\nmutator(formRankedMatrix, actionMessage => {\r\n  //setting the rows of rankedData to each category's rankings\r\n  const temp: number[][] = [];\r\n  for (var i = 0; i < getStore().datum[0].length; i++) {\r\n    //each \"category\" column\r\n    var raw_data = getStore().datum.map(function(value, index) {\r\n      return value[i];\r\n    });\r\n    temp.push(getRanking(raw_data));\r\n  }\r\n  //making the rows into zipcodes again via transpose\r\n  getStore().rankedData = temp[0].map((col, i) => temp.map(row => row[i]));\r\n  console.log(\"done\");\r\n});\r\n\r\nfunction getRanking(vals: number[]): number[] {\r\n  const sorted = vals.slice().sort(function(a, b) {\r\n    return a - b;\r\n  });\r\n  return vals.map(function(val) {\r\n    return sorted.indexOf(val) + 1;\r\n  });\r\n}\r\n\r\nfunction normalize(vals: number[]): number[] {\r\n  var min = vals[0];\r\n  var max = vals[0];\r\n  for (var i = 0, len = vals.length; i < len; i++) {\r\n    if (vals[i] > max) {\r\n      max = vals[i];\r\n    }\r\n    if (vals[i] < min) {\r\n      min = vals[i];\r\n    }\r\n  }\r\n  const res: number[] = [];\r\n  for (var j = 0; j < len; j++) {\r\n    res.push((vals[j] - min) / (max - min));\r\n  }\r\n  return res;\r\n}\r\n\r\nmutator(computeRanking, actionMessage => {\r\n  getStore().finalScores = getStore().rankedData.map(zip =>\r\n    dotProduct(getSliderState(), zip)\r\n  );\r\n});\r\n\r\nfunction dotProduct(arr1: number[], arr2: number[]) {\r\n  var sum = 0;\r\n  console.log(arr2.length);\r\n  if (arr1.length === arr2.length) {\r\n    for (var i = 0, len = arr1.length; i < len; i++) {\r\n      sum += arr1[i] * arr2[i];\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nmutator(createRankingArray, actionMessage => {\r\n  const len = getStore().finalScores.length;\r\n  const placements = getRanking(getStore().finalScores).map(function(x) {\r\n    return len - x + 1;\r\n  });\r\n  for (var i = 0; i < len; i++) {\r\n    getStore().results.push({\r\n      zip: getStore().valid_zipcodes[i],\r\n      score: getStore().finalScores[i],\r\n      rank: placements[i]\r\n    });\r\n  }\r\n  getStore().results = getStore().results.sort(function(a, b) {\r\n    return a.rank - b.rank;\r\n  });\r\n});\r\n\r\nmutator(addFinalCoordinate, actionMessage => {\r\n  getStore().resultCoordinates.push({\r\n    lat: actionMessage.lat,\r\n    lng: actionMessage.lng\r\n  });\r\n});\r\n\r\nmutator(setInvalidResponse, actionMessage => {\r\n  getStore().invalidResponse = true;\r\n  getStore().submitted = false;\r\n  getStore().startedSession = false;\r\n});\r\n","import getStore from \"../store/store\";\r\n\r\nexport function getSliderState(): number[] {\r\n  return getStore().sliderNums;\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport getStore from \"./store/store\";\r\nimport { removeAddress } from \"./actions/locationEntryActions\";\r\nimport \"./mutators/locationEntryMutators\";\r\nimport \"./preferenceStyles.css\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n@observer\r\nclass LocationList extends React.Component<{}> {\r\n  render() {\r\n    const addresses = getStore().text;\r\n    const addressList = addresses.map(address => (\r\n      <ListItem className=\"listItem\">\r\n        <ListItemText primary={address} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"delete\"\r\n            onClick={() => removeAddress(address)}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    ));\r\n    return addresses.length > 0 ? (\r\n      <div className=\"locationList\">\r\n        <List>{addressList}</List>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default LocationList;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport getStore from \"./store/store\";\r\nimport { addNewAddress, maintainInput } from \"./actions/locationEntryActions\";\r\nimport \"./mutators/locationEntryMutators\";\r\nimport \"./preferenceStyles.css\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport InputLabel from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport LocationList from \"./LocationList\";\r\n\r\n@observer\r\nclass LocationEntry extends React.Component<{}> {\r\n  render() {\r\n    const store = getStore();\r\n    return (\r\n      <div className=\"entryContainer\">\r\n        <h1>locations</h1>\r\n        <h3>\r\n          List any addresses or places of significance to you (work,\r\n          friends/family, etc.)\r\n        </h3>\r\n        <FormControl>\r\n          <TextField\r\n            name=\"address\"\r\n            placeholder=\"address\"\r\n            value={store.currentEntry}\r\n            onChange={maintainInput}\r\n            id=\"location-input\"\r\n            aria-describedby=\"location-helper\"\r\n            fullWidth\r\n          />\r\n\r\n          <div className=\"add\">\r\n            <Fab color=\"primary\" onClick={addNewAddress}>\r\n              Add\r\n            </Fab>\r\n          </div>\r\n        </FormControl>\r\n        <LocationList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationEntry;\r\n","import { action } from \"satcheljs\";\r\nexport let maintainSlider = action(\r\n  \"maintainSlider\",\r\n  (value: number, slider: number) => ({\r\n    value,\r\n    slider\r\n  })\r\n);\r\n","import { mutator } from \"satcheljs\";\r\nimport { maintainSlider } from \"../actions/sliderActions\";\r\nimport getStore from \"../store/store\";\r\n\r\nmutator(maintainSlider, actionMessage => {\r\n  getStore().sliderNums[actionMessage.slider] = actionMessage.value;\r\n});\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { maintainSlider } from \"./actions/sliderActions\";\r\nimport \"./mutators/sliderMutators\";\r\nimport \"./sliderStyles.css\";\r\n\r\nexport interface SliderEntryProps {\r\n  lowEnd: string;\r\n  highEnd: string;\r\n  title: string;\r\n  desc: string;\r\n  value: number;\r\n  index: number;\r\n}\r\n\r\n@observer\r\nclass SliderEntry extends React.Component<SliderEntryProps> {\r\n  render() {\r\n    const marks = [\r\n      {\r\n        value: 0,\r\n        label: this.props.lowEnd\r\n      },\r\n      {\r\n        value: 100,\r\n        label: this.props.highEnd\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"slider\">\r\n        <h1>{this.props.title}</h1>\r\n        <h3>{this.props.desc}</h3>\r\n        <Slider\r\n          value={this.props.value}\r\n          onChange={(event: React.ChangeEvent<{}>, value: number | number[]) =>\r\n            typeof value === \"number\"\r\n              ? maintainSlider(value, this.props.index)\r\n              : {}\r\n          }\r\n          marks={marks}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SliderEntry;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass SchoolSlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"not important\"\r\n        highEnd=\"very important\"\r\n        title=\"schools\"\r\n        desc=\"how important is it for you to live near a top public school district?\"\r\n        value={getStore().sliderNums[12]}\r\n        index={12}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SchoolSlider;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass HousingSlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"own\"\r\n        highEnd=\"rent\"\r\n        title=\"real estate\"\r\n        desc=\"are you looking to rent or own? (slider indicates strength of preference)\"\r\n        value={getStore().sliderNums[10]}\r\n        index={10}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HousingSlider;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass EducationSlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"not important\"\r\n        highEnd=\"very important\"\r\n        title=\"education\"\r\n        desc=\"how important is it for you to live in a well-educated neighborhood?\"\r\n        value={getStore().sliderNums[8]}\r\n        index={8}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EducationSlider;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass WalkingSlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"not important\"\r\n        highEnd=\"very important\"\r\n        title=\"walkability\"\r\n        desc=\"how important is it for you to live in a walkable neighborhood?\"\r\n        value={getStore().sliderNums[14]}\r\n        index={14}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalkingSlider;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass UrbanSlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"rural\"\r\n        highEnd=\"urban\"\r\n        title=\"density\"\r\n        desc=\"would you like to live in a city or small town?\"\r\n        value={getStore().sliderNums[13]}\r\n        index={13}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UrbanSlider;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass TransitSlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"not important\"\r\n        highEnd=\"very important\"\r\n        title=\"transportation\"\r\n        desc=\"how important is it for you to have access to a good public transportation system?\"\r\n        value={getStore().sliderNums[11]}\r\n        index={11}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransitSlider;\r\n","import * as React from \"react\";\r\nimport SliderEntry from \"./SliderEntry\";\r\nimport getStore from \"./store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass FamilySlider extends React.Component {\r\n  render() {\r\n    return (\r\n      <SliderEntry\r\n        lowEnd=\"not at all\"\r\n        highEnd=\"a lot\"\r\n        title=\"family\"\r\n        desc=\"how much would you like to live in a family-oriented neighorhood?\"\r\n        value={getStore().sliderNums[9]}\r\n        index={9}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FamilySlider;\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport getStore from \"./store/store\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport { setCentroid } from \"./actions/locationEntryActions\";\r\nimport \"./mutators/locationEntryMutators\";\r\n\r\nimport \"./resultStyles.css\";\r\n\r\n@observer\r\nclass ResultList extends React.Component<{}> {\r\n  render() {\r\n    const content = getStore().results.map((res, i) => (\r\n      <ListItem alignItems=\"center\">\r\n        <ListItemText primary={res.rank.toString().concat(\": \", res.zip)} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"navigate in map\"\r\n            onClick={() =>\r\n              setCentroid({\r\n                latitude: getStore().resultCoordinates[i].lat,\r\n                longitude: getStore().resultCoordinates[i].lng\r\n              })\r\n            }\r\n          >\r\n            <MapIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    ));\r\n    return (\r\n      <div className=\"list\">\r\n        <List>{content}</List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultList;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyD6VFQ8nT8wZCLlKuBlv9NKd0jfNEkLEtw\",\r\n  authDomain: \"locale-1565590474086.firebaseapp.com\",\r\n  databaseURL: \"https://locale-1565590474086.firebaseio.com\",\r\n  projectId: \"locale-1565590474086\",\r\n  storageBucket: \"locale-1565590474086.appspot.com\",\r\n  messagingSenderId: \"392136218799\",\r\n  appId: \"1:392136218799:web:37f58f612e3fa00e\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","const API_KEY = \"&key=AIzaSyBgdoIxWndrgXxHu2ad3mXGpAjO8O34uJc\";\r\nconst ZIPCODE_KEY = \"552WFK7HVW8DFPNVT28I\";\r\n\r\nexport { API_KEY, ZIPCODE_KEY };\r\n","import { orchestrator } from \"satcheljs\";\r\nimport getStore from \"../store/store\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport {\r\n  submitAddresses,\r\n  geocode,\r\n  setCentroid,\r\n  setZipCode,\r\n  addData,\r\n  formRankedMatrix,\r\n  computeRanking,\r\n  createRankingArray,\r\n  removeFirst,\r\n  setLoaded,\r\n  addFinalCoordinate,\r\n  setInvalidResponse\r\n} from \"../actions/locationEntryActions\";\r\nimport \"../mutators/locationEntryMutators\";\r\nimport { getCenter } from \"geolib\";\r\nimport db from \"../../firebase\";\r\nimport { API_KEY, ZIPCODE_KEY } from \"../../api\";\r\n\r\nasync function driver() {\r\n  await geocodeHelper();\r\n  if (getStore().coordinates.length > 0) {\r\n    centroidHelper();\r\n    await closestZipCode();\r\n    await zipCodeList();\r\n    if (getStore().invalidResponse === false) {\r\n      // await testZip();\r\n      removeFirst();\r\n      console.log(\"scoring\");\r\n      await addZipCodeData();\r\n      console.log(\"added\");\r\n      if (getStore().datum.length > 0) {\r\n        formRankedMatrix();\r\n        computeRanking();\r\n        createRankingArray();\r\n        await getResultCoordinates();\r\n      } else {\r\n        alert(\r\n          \"It appears that your selected locations are not in the same region, please try again.\"\r\n        );\r\n      }\r\n    }\r\n    setLoaded();\r\n  }\r\n}\r\n\r\norchestrator(geocode, actionMessage => {\r\n  driver();\r\n});\r\n\r\nasync function geocodeHelper() {\r\n  for (const index in getStore().text) {\r\n    const address = getStore().text[index];\r\n    const urlified = URLify(address);\r\n    const response = await axios.get(\r\n      \"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(\r\n        urlified,\r\n        API_KEY\r\n      )\r\n    );\r\n    if (response.data.results.length > 0) {\r\n      const longitude = response.data.results[0].geometry.location.lng;\r\n      const latitude = response.data.results[0].geometry.location.lat;\r\n      submitAddresses(latitude, longitude);\r\n    }\r\n  }\r\n}\r\n\r\nfunction centroidHelper() {\r\n  let coords = getStore().coordinates.map(coord => ({\r\n    latitude: coord.lat,\r\n    longitude: coord.lng\r\n  }));\r\n  setCentroid(getCenter(coords));\r\n  console.log(getStore().centroid);\r\n}\r\n\r\nasync function closestZipCode() {\r\n  const latlng = getStore()\r\n    .centroid.latitude.toString()\r\n    .concat(\", \", getStore().centroid.longitude.toString());\r\n  const response = await axios.get(\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\".concat(\r\n      latlng,\r\n      API_KEY\r\n    )\r\n  );\r\n  if (response.data.results[0] !== undefined) {\r\n    const components = response.data.results[0].address_components;\r\n    for (var i in components) {\r\n      if (components[i].types[0] === \"postal_code\") {\r\n        setZipCode(components[i].short_name);\r\n        return;\r\n      }\r\n    }\r\n  } else {\r\n    alert(\"This is not a valid location, please try again\");\r\n    setInvalidResponse();\r\n  }\r\n}\r\n\r\nasync function zipCodeList() {\r\n  if (getStore().invalidResponse) return;\r\n  const centerZip = getStore().zipCodes[0];\r\n  var radius = 15;\r\n  let response: AxiosResponse;\r\n  do {\r\n    response = await axios.get(\r\n      \"https://api.zip-codes.com/ZipCodesAPI.svc/1.0/FindZipCodesInRadius?zipcode=\".concat(\r\n        centerZip,\r\n        \"&maximumradius=\",\r\n        radius.toString(),\r\n        \"&minimumradius=0&key=\",\r\n        ZIPCODE_KEY\r\n      )\r\n    );\r\n    radius--;\r\n  } while (\r\n    response.data.DataList !== undefined &&\r\n    response.data.DataList.length > 600\r\n  );\r\n  if (response.data.DataList === undefined) {\r\n    alert(\r\n      \"it appears you have attempted to search in a place that is mostly water! Unfortunately, these searches are not supported at this time. Please try again later.\"\r\n    );\r\n    setInvalidResponse();\r\n  } else {\r\n    for (var index = 0; index < response.data.DataList.length; index++) {\r\n      setZipCode(response.data.DataList[index].Code);\r\n    }\r\n  }\r\n}\r\n\r\nfunction URLify(str: string) {\r\n  return str.trim().replace(/\\s/g, \"%20\");\r\n}\r\n\r\nasync function addZipCodeData() {\r\n  if (getStore().zipCodes.length > 100) {\r\n    await db\r\n      .collection(\"zipcode_data\")\r\n      .get()\r\n      .then(snapshot => {\r\n        if (snapshot) {\r\n          snapshot.forEach(doc => {\r\n            if (getStore().zipCodes.includes(doc.id)) {\r\n              addData(doc);\r\n            }\r\n          });\r\n        }\r\n      });\r\n  } else {\r\n    for (var i = 0, len = getStore().zipCodes.length; i < len; i++) {\r\n      await db\r\n        .collection(\"zipcode_data\")\r\n        .doc(getStore().zipCodes[i])\r\n        .get()\r\n        .then(doc => {\r\n          if (doc.data()) {\r\n            addData(doc);\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nasync function getResultCoordinates() {\r\n  for (var i = 0, len = getStore().valid_zipcodes.length; i < len; i++) {\r\n    const response = await axios.get(\r\n      \"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(\r\n        getStore().results[i].zip,\r\n        API_KEY\r\n      )\r\n    );\r\n    if (response.data.results.length > 0) {\r\n      addFinalCoordinate(\r\n        response.data.results[0].geometry.location.lat,\r\n        response.data.results[0].geometry.location.lng\r\n      );\r\n    }\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { geocode } from \"./actions/locationEntryActions\";\r\nimport \"./orchestrators/locationOrchestrators\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport \"./resultStyles.css\";\r\n\r\n@observer\r\nclass LoadingResults extends React.Component<{}> {\r\n  async componentDidMount() {\r\n    await geocode();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loadingbar\">\r\n        <LinearProgress variant=\"query\" />\r\n        <br />\r\n        <LinearProgress color=\"secondary\" variant=\"query\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingResults;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport getStore from \"./store/store\";\r\nimport { GoogleMapProvider, Marker, MapBox } from \"@googlemap-react/core\";\r\nimport { API_KEY } from \"../api\";\r\n\r\nvar convert = require(\"color-convert\");\r\n\r\n@observer\r\nclass AddressMap extends React.Component {\r\n  render() {\r\n    const markers = getStore().coordinates.map((coord, index) => (\r\n      <Marker\r\n        id={getStore().text[index]}\r\n        opts={{\r\n          draggable: false,\r\n          title: getStore().text[index],\r\n          position: coord\r\n        }}\r\n      />\r\n    ));\r\n\r\n    const zips = getStore().resultCoordinates.map((coord, i) => (\r\n      <Marker\r\n        id={getStore().results[i].zip}\r\n        opts={{\r\n          draggable: false,\r\n          title: getStore().results[i].zip,\r\n          icon: {\r\n            url: \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|\".concat(\r\n              getColor(i)\r\n            )\r\n          },\r\n          position: coord\r\n        }}\r\n      />\r\n    ));\r\n    return (\r\n      <GoogleMapProvider>\r\n        <MapBox\r\n          apiKey={API_KEY}\r\n          opts={{\r\n            center: {\r\n              lat: getStore().centroid.latitude,\r\n              lng: getStore().centroid.longitude\r\n            },\r\n            zoom: 10\r\n          }}\r\n          style={{ height: \"100vh\", width: \"100%\" }}\r\n          useVisualization\r\n        />\r\n        <Marker\r\n          id=\"center\"\r\n          opts={{\r\n            draggable: false,\r\n            title: \"center\",\r\n            position: {\r\n              lat: getStore().centroid.latitude,\r\n              lng: getStore().centroid.longitude\r\n            },\r\n            icon: \"+\"\r\n          }}\r\n        />\r\n        {markers}\r\n        {zips}\r\n      </GoogleMapProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getColor(index: number): string {\r\n  const hue =\r\n    ((getStore().results.length - getStore().results[index].rank) /\r\n      getStore().results.length) *\r\n    120;\r\n  //value from 0 to 1\r\n  return convert.hsl.hex(hue, 100, 50);\r\n}\r\n\r\nexport default AddressMap;\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport getStore from \"./store/store\";\r\nimport ResultList from \"./ResultList\";\r\nimport LoadingResults from \"./LoadingResults\";\r\nimport AddressMap from \"./AddressMap\";\r\nimport \"./resultStyles.css\";\r\n\r\n@observer\r\nclass ResultsContainer extends React.Component<{}> {\r\n  render() {\r\n    if (getStore().submitted) {\r\n      return (\r\n        <div className=\"resultBox\">\r\n          <LoadingResults />\r\n        </div>\r\n      );\r\n    } else if (getStore().startedSession) {\r\n      return (\r\n        <div className=\"resultBox\">\r\n          <ResultList />\r\n          <AddressMap />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ResultsContainer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport LocationEntry from \"./GeoCentroid/LocationEntry\";\nimport { observer } from \"mobx-react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Container from \"react-bootstrap/Container\";\nimport SchoolSlider from \"./Sliders/SchoolSlider\";\nimport { scroller } from \"react-scroll\";\nimport { submit } from \"./GeoCentroid/actions/locationEntryActions\";\nimport HousingSlider from \"./Sliders/HousingSlider\";\nimport EducationSlider from \"./Sliders/EducationSlider\";\nimport WalkingSlider from \"./Sliders/WalkingSlider\";\nimport UrbanSlider from \"./Sliders/UrbanSlider\";\nimport TransitSlider from \"./Sliders/TransitSlider\";\nimport FamilySlider from \"./Sliders/FamilySlider\";\nimport ResultsContainer from \"./GeoCentroid/ResultContainer\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Welcome to Locale\n        <div className=\"Sub-header\">find your perfect neighborhood</div>\n        <Fab\n          variant=\"extended\"\n          // style={{ color: \"#aaaaaa\" }}\n          color=\"secondary\"\n          size=\"large\"\n          onClick={() => scrollTo(\"content\")}\n        >\n          get started\n        </Fab>\n      </header>\n      <div className=\"content\">\n        <div className=\"intro\">\n          <p>\n            personalize the information below to discover the perfect\n            neighborhood for you\n          </p>\n        </div>\n        <Container className=\"locationContainer\">\n          <LocationEntry />\n        </Container>\n        <Container className=\"sliderContainer\">\n          <SchoolSlider />\n          <HousingSlider />\n          <EducationSlider />\n          <WalkingSlider />\n          <UrbanSlider />\n          <TransitSlider />\n          <FamilySlider />\n          <Fab\n            type=\"submit\"\n            onClick={() => {\n              submit();\n              scrollTo(\"resultBox\");\n            }}\n            color=\"secondary\"\n          >\n            Submit\n          </Fab>\n        </Container>\n        <ResultsContainer />\n      </div>\n    </div>\n  );\n};\n\nfunction scrollTo(loc: string): void {\n  setTimeout(() => {\n    scroller.scrollTo(loc, {\n      smooth: true,\n      duration: 800\n    });\n  }, 1);\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}